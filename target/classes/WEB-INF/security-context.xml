<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- We will be defining all security related configurations in this file -->

	<http use-expressions="true">
		<intercept-url pattern="/**" access="isAuthenticated()" /> <!-- this means all URL in this app will be checked if user is authenticated -->
		<form-login /> <!-- We will just use the built-in form login page in Spring -->
		<logout logout-url="/logout" logout-success-url="/index" /> <!-- the logout url we will use in JSP -->
	</http>


	<beans:bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService"></beans:property>
	</beans:bean>

	<beans:bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<beans:property name="providers">
			<beans:list>
				<beans:ref local="daoAuthenticationProvider" />
			</beans:list>
		</beans:property>
	</beans:bean>


	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">


		</authentication-provider>

	</authentication-manager>

	<!-- <authentication-manager> <authentication-provider> Normally, in this 
		part, you will declare the source of your users But for simplicity, we will 
		hard-code the users. This is very useful while testing setup <user-service> 
		<user name="faisal" password="faisal" authorities="Admin, User"/> <user name="raza" 
		password="raza" authorities="User"/> </user-service> </authentication-provider> 
		</authentication-manager> -->
</beans:beans>